<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Code Coffee Compendium</title><link>http://learnteachcode.org/code-coffee-compendium/</link><description>Recent content on Code Coffee Compendium</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="http://learnteachcode.org/code-coffee-compendium/index.xml" rel="self" type="application/rss+xml"/><item><title>Discussions and Articles</title><link>http://learnteachcode.org/code-coffee-compendium/discussions/</link><pubDate>Sun, 21 Jun 2020 00:00:00 +0000</pubDate><guid>http://learnteachcode.org/code-coffee-compendium/discussions/</guid><description>Homepage | Tutorials and Challenges | How-To Guides | Discussions and Articles | References
Discussions and Articles Picking Up a Language or Framework Whether you’re a brand new coder or a veteran, picking up a new tool can seem overwhelming. There are dozens of programming languages and coding frameworks out there for you to choose from; all of them have similarities, as well as differences that make them unique.</description></item><item><title>How-To Guides</title><link>http://learnteachcode.org/code-coffee-compendium/how-to/</link><pubDate>Sun, 21 Jun 2020 00:00:00 +0000</pubDate><guid>http://learnteachcode.org/code-coffee-compendium/how-to/</guid><description> Homepage | Tutorials and Challenges | How-To Guides | Discussions and Articles | References
Community How-To Guides Open Source How to Contribute to Open Source</description></item><item><title>References</title><link>http://learnteachcode.org/code-coffee-compendium/references/</link><pubDate>Sun, 21 Jun 2020 00:00:00 +0000</pubDate><guid>http://learnteachcode.org/code-coffee-compendium/references/</guid><description>Homepage | Tutorials and Challenges | How-To Guides | Discussions and Articles | References
References Programming Languages Name Description Sample Code Python is an interpreted, high-level, general-purpose programming language. Created by Guido van Rossum and first released in 1991, Python’s design philosophy emphasizes code readability with its notable use of significant whitespace.</description></item><item><title>Tutorials and Challenges</title><link>http://learnteachcode.org/code-coffee-compendium/tutorials/</link><pubDate>Sun, 21 Jun 2020 00:00:00 +0000</pubDate><guid>http://learnteachcode.org/code-coffee-compendium/tutorials/</guid><description>Homepage | Tutorials and Challenges | How-To Guides | Discussions and Articles | References
Tutorials and Challenges Interactive Lessons &amp;amp; Challenges Learn a Tech Stack Learn a tech stack by doing interactive tutorials. Tech stacks can include, but are not limited to, programming languages (s.a., Python, Javascript, Golang, SQL) or frameworks (s.a., Node, React, Sass).
Name Description Requirements Automate the Boring Stuff with Python</description></item><item><title/><link>http://learnteachcode.org/code-coffee-compendium/home/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://learnteachcode.org/code-coffee-compendium/home/</guid><description>Introduction Welcome to the LearnTeachCode Code &amp;amp; Coffee Compendium! Maintained by the Baldwin Park &amp;amp; El Sereno/Alhambra study group, this page serves as a resource compendium for facilitating frequently asked questions of the form &amp;#34;Where should I go to learn &amp;lt;insert computer science topic&amp;gt;&amp;#34; at our meetup events. If you have any requests for particular resources, or would like to add one, please feel free to submit a new issue or create a pull request!</description></item></channel></rss>